{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sinajp\\\\OneDrive - SAS\\\\Documents\\\\GitHub\\\\ajay17m.github.io-1\\\\viya_app\\\\src\\\\components\\\\MASForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MASForm(props) {\n  _s();\n\n  const [formElements, setFormElements] = useState({\n    '1': {\n      label: \"Cholesterol level\",\n      min: 50,\n      max: 600,\n      variable: \"Cholesterol\",\n      value: null,\n      type: \"range\"\n    },\n    '2': {\n      label: \"Diastolic level\",\n      min: 50,\n      max: 400,\n      variable: \"Diastolic\",\n      value: null,\n      type: \"range\"\n    },\n    '3': {\n      label: \"Systolic level\",\n      min: 25,\n      max: 200,\n      variable: \"Systolic\",\n      value: null,\n      type: \"range\"\n    },\n    '4': {\n      label: \"Cigarets/day\",\n      min: 0,\n      max: 100,\n      variable: \"Smoking\",\n      value: null,\n      type: \"range\"\n    },\n    '5': {\n      label: \"Age At Start\",\n      min: 1,\n      max: 150,\n      variable: \"AgeAtStart\",\n      value: null,\n      type: \"range\"\n    },\n    '6': {\n      label: \"Weight in lbs\",\n      min: 1,\n      max: 500,\n      variable: \"Weight\",\n      value: null,\n      type: \"range\"\n    },\n    '7': {\n      label: \"Sex\",\n      options: ['F', 'M'],\n      variable: \"Sex\",\n      value: \"F\",\n      type: \"dropdown\"\n    }\n  });\n\n  const handleEvaluate = event => {\n    event.preventDefault();\n\n    for (let element in formElements) {\n      const data = formElements[element];\n\n      if (data.value === null) {\n        setFormElements({ ...formElements,\n          [element]: data.min\n        });\n      }\n\n      ;\n    }\n\n    props.onEvaluate(formElements);\n  };\n\n  const handleChange = (event, id) => {\n    const update = formElements[id];\n    update.value = parseInt(event.target.value);\n    setFormElements({ ...formElements,\n      [id]: update\n    });\n  };\n\n  const elements = [];\n\n  for (let element in formElements) {\n    const data = formElements[element];\n\n    switch (data.type) {\n      case \"range\":\n        if (data.value === null) {\n          data.value = data.min;\n        }\n\n        ;\n        elements.push( /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Row,\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            sm: \"2\",\n            style: {\n              padding: 8\n            },\n            children: /*#__PURE__*/_jsxDEV(Form.Label, {\n              children: [data.label, \" :\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            sm: \"2\",\n            style: {\n              padding: 12\n            },\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"range\",\n              min: data.min,\n              max: data.max,\n              value: data.value,\n              onChange: e => handleChange(e, element)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            sm: \"1\",\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"input\",\n              value: data.value,\n              onChange: e => handleChange(e, element)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this)]\n        }, element, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this));\n        break;\n\n      case \"dropdown\":\n        elements.push( /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Row,\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            sm: \"2\",\n            style: {\n              padding: 8\n            },\n            children: /*#__PURE__*/_jsxDEV(Form.Label, {\n              children: [data.label, \" :\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            sm: \"1\",\n            style: {\n              padding: 12\n            },\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"select\",\n              as: \"select\",\n              onChange: e => handleChange(e, element),\n              children: data.options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: option,\n                children: option\n              }, option, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 63\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this)]\n        }, element, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this));\n        break;\n\n      default:\n        console.log('unknown form input type');\n        break;\n    }\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: /*#__PURE__*/_jsxDEV(Col, {\n      md: {\n        span: 12,\n        offset: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Please set the values for the different risk factors:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleEvaluate,\n        style: {\n          padding: 10\n        },\n        children: [elements, /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Row,\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            md: {\n              span: 12,\n              offset: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              type: \"submit\",\n              children: \"Evaluate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MASForm, \"tlv6/eH49fJe8lAxkwMmvdtDY1c=\");\n\n_c = MASForm;\nexport default MASForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"MASForm\");","map":{"version":3,"names":["React","useState","Form","Button","Col","Row","MASForm","props","formElements","setFormElements","label","min","max","variable","value","type","options","handleEvaluate","event","preventDefault","element","data","onEvaluate","handleChange","id","update","parseInt","target","elements","push","padding","e","map","option","console","log","span","offset"],"sources":["C:/Users/sinajp/OneDrive - SAS/Documents/GitHub/ajay17m.github.io-1/viya_app/src/components/MASForm.js"],"sourcesContent":["import React, { useState } from 'react';\n\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\n\nfunction MASForm(props) {\n    const [formElements, setFormElements] = useState({\n        '1': { label: \"Cholesterol level\", min: 50, max: 600, variable: \"Cholesterol\", value: null, type: \"range\" },\n        '2': { label: \"Diastolic level\", min: 50, max: 400, variable: \"Diastolic\", value: null, type: \"range\" },\n        '3': { label: \"Systolic level\", min: 25, max: 200, variable: \"Systolic\", value: null, type: \"range\" },\n        '4': { label: \"Cigarets/day\", min: 0, max: 100, variable: \"Smoking\", value: null, type: \"range\" },\n        '5': { label: \"Age At Start\", min: 1, max: 150, variable: \"AgeAtStart\", value: null, type: \"range\" },\n        '6': { label: \"Weight in lbs\", min: 1, max: 500, variable: \"Weight\", value: null, type: \"range\" },\n        '7': { label: \"Sex\", options: ['F', 'M'], variable: \"Sex\", value: \"F\", type: \"dropdown\" }\n    });\n\n    const handleEvaluate = (event) => {\n        event.preventDefault();\n        for (let element in formElements) {\n            const data = formElements[element];\n            if (data.value === null) {\n                setFormElements({ ...formElements, [element]: data.min })\n            };\n        }\n        props.onEvaluate(formElements);\n    };\n\n    const handleChange = (event, id) => {\n        const update = formElements[id];\n        update.value = parseInt(event.target.value);\n        setFormElements({ ...formElements, [id]: update })\n    };\n\n    const elements = [];\n    for (let element in formElements) {\n        const data = formElements[element];\n        switch (data.type) {\n            case \"range\":\n                if (data.value === null) { data.value = data.min };\n                elements.push(\n                    <Form.Group as={Row} key={element}>\n                        <Col sm=\"2\" style={{ padding: 8 }}>\n                            <Form.Label>{data.label} :</Form.Label>\n                        </Col>\n                        <Col sm=\"2\" style={{ padding: 12 }}>\n                            <Form.Control\n                                type=\"range\"\n                                min={data.min}\n                                max={data.max}\n                                value={data.value}\n                                onChange={e => handleChange(e, element)}\n                            />\n                        </Col>\n                        <Col sm=\"1\">\n                            <Form.Control\n                                type=\"input\"\n                                value={data.value}\n                                onChange={e => handleChange(e, element)}\n                            />\n                        </Col>\n                    </Form.Group>\n                );\n                break;\n            case \"dropdown\":\n                elements.push(\n                    <Form.Group as={Row} key={element}>\n                        <Col sm=\"2\" style={{ padding: 8 }}>\n                            <Form.Label>{data.label} :</Form.Label>\n                        </Col>\n                        <Col sm=\"1\" style={{ padding: 12 }}>\n                            <Form.Control\n                                type=\"select\"\n                                as=\"select\"\n                                onChange={e => handleChange(e, element)}\n                            >\n                                {data.options.map((option) => <option key={option} value={option}>{option}</option>)}\n                            </Form.Control>\n                        </Col>\n                    </Form.Group>\n                );\n                break;\n            default:\n                console.log('unknown form input type');\n                break;\n        }\n    };\n    return (\n        <Row>\n            <Col md={{ span: 12, offset: 1 }}>\n                <h3>\n                    Please set the values for the different risk factors:\n                </h3>\n                <Form onSubmit={handleEvaluate} style={{ padding: 10 }} >\n                    {elements}\n                    <Form.Group as={Row}>\n                        <Col md={{ span: 12, offset: 2 }}>\n                            <Button\n                                variant=\"primary\"\n                                type=\"submit\">\n                                Evaluate\n                            </Button>\n                        </Col>\n                    </Form.Group>\n                </Form>\n            </Col>\n        </Row >\n\n    )\n}\n\nexport default MASForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}