{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sinajp\\\\OneDrive - SAS\\\\Documents\\\\GitHub\\\\ajay17m.github.io-1\\\\viya_app\\\\src\\\\pages\\\\Jobs.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Instance from '../apis/Instance';\nimport { AuthContext } from '../contexts';\nimport Container from 'react-bootstrap/Container';\nimport JobSelector from '../components/Selectors/JobSelector';\nimport TableViewer from '../components/TableViewer/TableViewer';\nimport Loading from '../components/Loading';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Jobs() {\n  _s();\n\n  const {\n    authInfo,\n    setAuthInfo\n  } = useContext(AuthContext);\n  const [selection, setSelection] = useState({\n    library: null,\n    table: null\n  });\n  const [tableData, setTableData] = useState({\n    rows: [],\n    columns: []\n  });\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n  useEffect(() => {\n    if (authInfo.authenticated === false) {\n      history.push(\"/logon\");\n    }\n  }, [authInfo.authenticated, history]);\n  useEffect(() => {\n    if (authInfo.authenticated === true && !(\"job\" in authInfo.csrf)) {\n      const endpoint = \"SASJobExecution/csrf\";\n      Instance.get(endpoint).then(response => {\n        setAuthInfo({ ...authInfo,\n          csrf: { ...authInfo.csrf,\n            job: response.data\n          }\n        });\n      });\n    }\n  }, [authInfo, setAuthInfo]);\n  useEffect(() => {\n    if (selection.table !== null) {\n      const endpoint = \"SASJobExecution/\";\n      const headers = {\n        'X-CSRF-HEADER': 'X-CSRF-TOKEN',\n        'X-CSRF-TOKEN': authInfo.csrf.job\n      };\n      const params = {\n        _program: \"/gelcontent/Demo/VISUAL/Jobs/extractData\",\n        reqType: \"getdata\",\n        lib: selection.library,\n        ds: selection.table\n      };\n      Instance.get(endpoint, {\n        headers: headers,\n        params: params\n      }).then(response => {\n        const rowsData = response.data.rows.map(row => {\n          const data = response.data.columns.map(col => row[col.name]);\n          return data;\n        });\n        setTableData({\n          columns: response.data.columns,\n          rows: rowsData\n        });\n        setLoading(false);\n      });\n    }\n  }, [selection, authInfo.csrf]);\n\n  const handleSelection = event => {\n    event.preventDefault();\n    setTableData({\n      rows: [],\n      columns: []\n    });\n    setLoading(true);\n    const selection = {\n      library: event.target[0].value,\n      table: event.target[1].value\n    };\n    setSelection(selection);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"justify-content-md-center\",\n    children: [/*#__PURE__*/_jsxDEV(JobSelector, {\n      onSelect: handleSelection\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), tableData.rows.length !== tableData.columns.length ? /*#__PURE__*/_jsxDEV(TableViewer, {\n      data: tableData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 67\n    }, this) : /*#__PURE__*/_jsxDEV(Loading, {\n      status: loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 102\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Jobs, \"c8CyaugmTAw6CrR/rTha96PIeTc=\", false, function () {\n  return [useHistory];\n});\n\n_c = Jobs;\nexport default Jobs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Jobs\");","map":{"version":3,"names":["useEffect","useState","useContext","useHistory","Instance","AuthContext","Container","JobSelector","TableViewer","Loading","Jobs","authInfo","setAuthInfo","selection","setSelection","library","table","tableData","setTableData","rows","columns","loading","setLoading","history","authenticated","push","csrf","endpoint","get","then","response","job","data","headers","params","_program","reqType","lib","ds","rowsData","map","row","col","name","handleSelection","event","preventDefault","target","value","length"],"sources":["C:/Users/sinajp/OneDrive - SAS/Documents/GitHub/ajay17m.github.io-1/viya_app/src/pages/Jobs.js"],"sourcesContent":["import { useEffect, useState, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Instance from '../apis/Instance';\n\nimport { AuthContext } from '../contexts';\n\nimport Container from 'react-bootstrap/Container';\n\nimport JobSelector from '../components/Selectors/JobSelector';\nimport TableViewer from '../components/TableViewer/TableViewer';\nimport Loading from '../components/Loading';\n\nfunction Jobs() {\n    const { authInfo, setAuthInfo } = useContext(AuthContext);\n    const [selection, setSelection] = useState({ library: null, table: null });\n    const [tableData, setTableData] = useState({ rows: [], columns: [] });\n    const [loading, setLoading] = useState(false);\n    const history = useHistory();\n\n    useEffect(() => {\n        if (authInfo.authenticated === false) {\n            history.push(\"/logon\");\n        }\n    }, [authInfo.authenticated, history]);\n\n    useEffect(() => {\n        if (authInfo.authenticated === true && !(\"job\" in authInfo.csrf)) {\n            const endpoint = \"SASJobExecution/csrf\";\n            Instance.get(endpoint)\n                .then(response => {\n                    setAuthInfo({ ...authInfo, csrf: { ...authInfo.csrf, job: response.data }});\n                });\n        }\n    }, [authInfo, setAuthInfo]);\n\n    useEffect(() => {\n        if (selection.table !== null) {\n            const endpoint = \"SASJobExecution/\";\n            const headers = {\n                'X-CSRF-HEADER': 'X-CSRF-TOKEN',\n                'X-CSRF-TOKEN': authInfo.csrf.job\n            }\n            const params = {\n                _program: \"/gelcontent/Demo/VISUAL/Jobs/extractData\",\n                reqType: \"getdata\",\n                lib: selection.library,\n                ds: selection.table\n            };\n            Instance.get(endpoint, { headers: headers, params: params })\n                .then(response => {\n                    const rowsData = response.data.rows.map(row => {\n                        const data = response.data.columns.map(col => row[col.name]);\n                        return data;\n                    })\n                    setTableData({ columns: response.data.columns, rows: rowsData });\n                    setLoading(false);\n                });\n        }\n    }, [selection, authInfo.csrf]);\n\n    const handleSelection = (event) => {\n        event.preventDefault();\n        setTableData({ rows: [], columns: [] });\n        setLoading(true);\n        const selection = { library: event.target[0].value, table: event.target[1].value };\n        setSelection(selection);\n    };\n\n    return (\n        <Container className=\"justify-content-md-center\">\n            <JobSelector onSelect={handleSelection} />\n            {tableData.rows.length !== tableData.columns.length ? <TableViewer data={tableData} /> : <Loading status={loading} />}\n        </Container>\n    )\n}\n\nexport default Jobs;"],"mappings":"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"},"metadata":{},"sourceType":"module"}