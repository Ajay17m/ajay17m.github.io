{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sinajp\\\\OneDrive - SAS\\\\Documents\\\\GitHub\\\\ajay17m.github.io-1\\\\viya_app\\\\src\\\\components\\\\Selectors\\\\JobSelector.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useContext, useEffect } from 'react';\nimport { Form, Col, Button } from 'react-bootstrap';\nimport { AuthContext } from '../../contexts';\nimport Instance from '../../apis/Instance';\nimport LibrarySelector from '../Selectors/LibrarySelector';\nimport TableSelector from '../Selectors/TableSelector';\nimport Loading from '../Loading';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction JobSelector(props) {\n  _s();\n\n  const {\n    authInfo\n  } = useContext(AuthContext);\n  const [libraries, setLibraries] = useState([]);\n  const [tables, setTables] = useState([]);\n  const [selectedLibrary, setSelectedLibrary] = useState(null);\n  const [selectedTable, setSelectedTable] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const getSelectedLibrary = selected => {\n    setSelectedLibrary(selected.target.value);\n  };\n\n  const getSelectedTable = selected => {\n    setSelectedTable(selected.target.value);\n  };\n\n  useEffect(() => {\n    if (authInfo.authenticated === true && authInfo.csrf.job !== undefined) {\n      setLoading(true);\n      const endpoint = \"SASJobExecution/\";\n      const headers = {\n        'X-CSRF-HEADER': 'X-CSRF-TOKEN',\n        'X-CSRF-TOKEN': authInfo.csrf.job\n      };\n      const params = {\n        _program: \"/gelcontent/Demo/VISUAL/Jobs/extractData\",\n        reqType: \"getlibraries\"\n      };\n      Instance.get(endpoint, {\n        headers: headers,\n        params: params\n      }).then(response => {\n        const data = response.data.map(element => [element.libname]);\n        setLibraries(data);\n        setLoading(false);\n      });\n    }\n  }, [authInfo.authenticated, authInfo.csrf, setLoading]);\n  useEffect(() => {\n    setLoading(true);\n    setSelectedTable(null);\n    setTables([]);\n\n    if (selectedLibrary !== null) {\n      const endpoint = \"SASJobExecution/\";\n      const headers = {\n        'X-CSRF-HEADER': 'X-CSRF-TOKEN',\n        'X-CSRF-TOKEN': authInfo.csrf.job\n      };\n      const params = {\n        _program: \"/gelcontent/Demo/VISUAL/Jobs/extractData\",\n        reqType: \"gettables\",\n        lib: selectedLibrary\n      };\n      Instance.get(endpoint, {\n        headers: headers,\n        params: params\n      }).then(response => {\n        const data = response.data.map(element => [element.memname]);\n        setTables(data);\n        setLoading(false);\n      });\n    }\n  }, [selectedLibrary, authInfo.csrf.job]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: props.onSelect,\n      style: {\n        padding: 10\n      },\n      children: /*#__PURE__*/_jsxDEV(Form.Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          sm: \"4\",\n          children: /*#__PURE__*/_jsxDEV(LibrarySelector, {\n            data: libraries,\n            type: \"SAS\",\n            handleSelection: getSelectedLibrary\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          sm: \"7\",\n          children: /*#__PURE__*/_jsxDEV(TableSelector, {\n            data: tables,\n            type: \"SAS\",\n            disabled: selectedLibrary === null ? true : false,\n            handleSelection: getSelectedTable\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          sm: \"1\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            disabled: selectedTable === null ? true : false,\n            children: \"Display\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Loading, {\n      status: loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n}\n\n_s(JobSelector, \"5W3vKLN4cMJ0XOEmgEB8cvoZH0M=\");\n\n_c = JobSelector;\nexport default JobSelector;\n\nvar _c;\n\n$RefreshReg$(_c, \"JobSelector\");","map":{"version":3,"names":["React","Fragment","useState","useContext","useEffect","Form","Col","Button","AuthContext","Instance","LibrarySelector","TableSelector","Loading","JobSelector","props","authInfo","libraries","setLibraries","tables","setTables","selectedLibrary","setSelectedLibrary","selectedTable","setSelectedTable","loading","setLoading","getSelectedLibrary","selected","target","value","getSelectedTable","authenticated","csrf","job","undefined","endpoint","headers","params","_program","reqType","get","then","response","data","map","element","libname","lib","memname","onSelect","padding"],"sources":["C:/Users/sinajp/OneDrive - SAS/Documents/GitHub/ajay17m.github.io-1/viya_app/src/components/Selectors/JobSelector.js"],"sourcesContent":["import React, { Fragment, useState, useContext, useEffect } from 'react';\r\n\r\nimport { Form, Col, Button } from 'react-bootstrap';\r\n\r\nimport { AuthContext } from '../../contexts';\r\n\r\nimport Instance from '../../apis/Instance';\r\n\r\nimport LibrarySelector from '../Selectors/LibrarySelector';\r\nimport TableSelector from '../Selectors/TableSelector';\r\nimport Loading from '../Loading';\r\n\r\nfunction JobSelector(props) {\r\n    const { authInfo } = useContext(AuthContext);\r\n    const [libraries, setLibraries] = useState([]);\r\n    const [tables, setTables] = useState([]);\r\n    const [selectedLibrary, setSelectedLibrary] = useState(null);\r\n    const [selectedTable, setSelectedTable] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const getSelectedLibrary = (selected) => {\r\n        setSelectedLibrary(selected.target.value);\r\n    }\r\n    const getSelectedTable = (selected) => {\r\n        setSelectedTable(selected.target.value);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (authInfo.authenticated === true && authInfo.csrf.job !== undefined) {\r\n            setLoading(true);\r\n            const endpoint = \"SASJobExecution/\";\r\n            const headers = {\r\n                'X-CSRF-HEADER': 'X-CSRF-TOKEN',\r\n                'X-CSRF-TOKEN': authInfo.csrf.job\r\n            }\r\n            const params = {\r\n                _program: \"/gelcontent/Demo/VISUAL/Jobs/extractData\",\r\n                reqType: \"getlibraries\"\r\n            }\r\n            Instance.get(endpoint, { headers: headers, params: params })\r\n                .then(response => {\r\n                    const data = response.data.map(element => [element.libname]);\r\n                    setLibraries(data);\r\n                    setLoading(false);\r\n                });\r\n        }\r\n    }, [authInfo.authenticated, authInfo.csrf, setLoading]);\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        setSelectedTable(null);\r\n        setTables([]);\r\n        if (selectedLibrary !== null) {\r\n            const endpoint = \"SASJobExecution/\";\r\n            const headers = {\r\n                'X-CSRF-HEADER': 'X-CSRF-TOKEN',\r\n                'X-CSRF-TOKEN': authInfo.csrf.job\r\n            }\r\n            const params = {\r\n                _program: \"/gelcontent/Demo/VISUAL/Jobs/extractData\",\r\n                reqType: \"gettables\",\r\n                lib: selectedLibrary\r\n            }\r\n            Instance.get(endpoint, { headers: headers, params: params })\r\n                .then(response => {\r\n                    const data = response.data.map(element => [element.memname]);\r\n                    setTables(data);\r\n                    setLoading(false);\r\n                });\r\n        }\r\n    }, [selectedLibrary, authInfo.csrf.job]);\r\n\r\n    return (\r\n        <Fragment>\r\n            <Form onSubmit={props.onSelect} style={{ padding: 10 }}>\r\n                <Form.Row>\r\n                    <Col sm=\"4\">\r\n                        <LibrarySelector data={libraries} type=\"SAS\" handleSelection={getSelectedLibrary} />\r\n                    </Col>\r\n                    <Col sm=\"7\">\r\n                        <TableSelector data={tables} type=\"SAS\" disabled={selectedLibrary === null ? true : false} handleSelection={getSelectedTable} />\r\n                    </Col>\r\n                    <Col sm=\"1\">\r\n                        <Button variant=\"primary\" type=\"submit\" disabled={selectedTable === null ? true : false} >\r\n                            Display\r\n                    </Button>\r\n                    </Col>\r\n                </Form.Row>\r\n            </Form>\r\n            <Loading status={loading} />\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default JobSelector;"],"mappings":"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"},"metadata":{},"sourceType":"module"}